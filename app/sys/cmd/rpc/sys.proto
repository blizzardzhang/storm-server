syntax = "proto3";

package sysClient;
option go_package = "./sysClient";


//user start
message LoginReq {
  string appId = 1;
  string account = 2;
  string password = 3;
}

message LoginResp {
  string AccessToken = 1;
  int64 AccessExpire = 2;
  int64 RefreshAfter = 3;
  UserInfo userInfo = 4;
  repeated string Permissions = 5;
}

message UserInfo {
  string id = 1;
  string account = 2;
  string name = 3;
  string realName = 4;
  string phone = 5;
  optional string createdAt = 6;
}

message UserListReq {
  uint64 current = 1;
  uint64 size = 2;
}
message UserListResp {
  uint64 total = 1;
  repeated UserInfo list = 2;
}

message UerInfoReq {
  string id = 1;
}
message UserInfoResp {
  UserInfo data = 1;
}

message UpdateUserReq {
  string id = 1;
  string account = 2;
  string name = 3;
  string nickName = 4;
  string phone = 5;
}
message UpdateUserResp {
  string data = 1;
}

message DeleteUserReq {
  repeated string ids = 1;
}
message DeleteUserResp {
  string data = 1;
}


message GrantRoleReq {
  string userId = 1;
  repeated string roleIds = 2;
}
message GrantRoleResp {
  string data = 1;
}

message GetUerRoleReq {
  string userId = 1;
}
message GetUerRoleResp {
  repeated string roleIds = 1;
}

service UserRpc {

  rpc Login(LoginReq) returns(LoginResp);
  rpc GetUserList(UserListReq) returns(UserListResp);
  rpc GetUserInfo(UerInfoReq) returns(UserInfoResp);
  rpc UpdateUser(UpdateUserReq) returns(UpdateUserResp);
  rpc DeleteUser(DeleteUserReq) returns(DeleteUserResp);
  rpc GrantRole(GrantRoleReq) returns(GrantRoleResp);
  rpc GetUserRole(GetUerRoleReq) returns(GetUerRoleResp);
}

//client start
message AddClientReq {
  string name = 1;
  string clientId = 2;
  string key = 3;
  string secret = 4;
  string grantType = 5;
  string redirectUri =6;
  string additionalInfo = 7;
  int64 accessTokenValidity =8;
  int64 RefreshTokenValidity = 9;

}
message AddClientResp {
  string data = 1;
}

message ClientInfoReq{
  string id = 1;
}
message ClientInfoResp{
  string id = 1;
  string name = 2;
  string clientId = 3;
  string key = 4;
  string secret = 5;
  string grantType = 6;
  string redirectUri = 7;
  string additionalInfo = 8;
  int64 accessTokenValidity = 9;
  int64 RefreshTokenValidity = 10;
  int64 status = 11;
  string createAt = 12;
  string updateAt = 13;
  string createUser = 14;
  string updateUser = 15;
}

message ListClientReq{
  int64 current = 1;
  int64 pageSize = 2;
  string name = 3;
}
message ListClientResp{
  int64 total = 1;
  int64 pageSize = 2;
  int64 current = 3;
  int64 totalPage = 4;
  repeated ClientInfoResp list = 5;
}

message UpdateClientReq{
  string id = 1;
  string name = 2;
  string clientId = 3;
  string key = 4;
  string secret = 5;
  string grantType = 6;
  string redirectUri = 7;
  string additionalInfo = 8;
  int64 accessTokenValidity = 9;
  int64 RefreshTokenValidity = 10;
}
message UpdateClientResp{
  string data = 1;
}

message DeleteClientReq{
  repeated string ids = 1;
}
message DeleteClientResp{
  string data = 1;
}

service clientRpc {
  rpc clientAdd(AddClientReq) returns (AddClientResp);
  rpc clientInfo(ClientInfoReq) returns (ClientInfoResp);
  rpc clientList(ListClientReq) returns (ListClientResp);
  rpc clientUpdate(UpdateClientReq) returns (UpdateClientResp);
  rpc clientDelete(DeleteClientReq) returns (DeleteClientResp);
}
//client end

//Department start
message AddDepartmentReq {
  string parentId = 1;
  string Ancestors = 2;
  string name = 3;
  int64 sort = 4;
}
message AddDepartmentResp {
  string data = 1;
}

message DepartmentInfoReq{
  string id = 1;
}
message DepartmentInfoResp{
  string id = 1;
  string parentId = 2;
  string ancestors = 3;
  string name = 4;
  int64 sort = 5;
  int64 status = 6;
  string createAt = 7;
  string updateAt = 8;
  string createUser = 9;
  string updateUser = 10;
}

message ListDepartmentReq{
  string name = 1;
}
message ListDepartmentResp{
  repeated DepartmentInfoResp list = 1;
}

message UpdateDepartmentReq{
  string id = 1;
  string parentId = 2;
  string ancestors = 3;
  string name = 4;
  int64 sort = 5;
}
message UpdateDepartmentResp{
  string data = 1;
}

message DeleteDepartmentReq{
  repeated string ids = 1;
}
message DeleteDepartmentResp{
  string data = 1;
}

service DepartmentRpc {
  rpc DepartmentAdd(AddDepartmentReq) returns (AddDepartmentResp);
  rpc DepartmentInfo(DepartmentInfoReq) returns (DepartmentInfoResp);
  rpc DepartmentList(ListDepartmentReq) returns (ListDepartmentResp);
  rpc DepartmentUpdate(UpdateDepartmentReq) returns (UpdateDepartmentResp);
  rpc DepartmentDelete(DeleteDepartmentReq) returns (DeleteDepartmentResp);
}
//Department end

//Role start
message AddRoleReq {
  int64 type = 1;
  string name = 2;
  string code = 3;
  int64 sort = 4;
  string remark = 5;
}
message AddRoleResp {
  string data = 1;
}

message RoleInfoReq{
  string id = 1;
}
message RoleInfoResp{
  string id = 1;
  int64 type = 2;
  string name = 3;
  string code = 4;
  int64 sort = 5;
  string remark = 6;
  int64 status = 7;
  string createAt = 8;
  string updateAt = 9;
  string createUser = 10;
  string updateUser = 11;
}

message ListRoleReq{
  int64 current = 1;
  int64 pageSize = 2;
  string name = 3;
}
message ListRoleResp{
  int64 total = 1;
  int64 pageSize = 2;
  int64 current = 3;
  int64 totalPage = 4;
  repeated RoleInfoResp list = 5;
}

message UpdateRoleReq{
  string id = 1;
  int64 type = 2;
  string name = 3;
  string code = 4;
  int64 sort = 5;
  string remark = 6;
}
message UpdateRoleResp{
  string data = 1;
}

message DeleteRoleReq{
  repeated string ids = 1;
}
message DeleteRoleResp{
  string data = 1;
}

message GrantRolePermissionReq{
  string roleId = 1;
  repeated string permissionIds = 2;
}
message GrantRolePermissionResp{
  string data = 1;
}

message GetRolePermissionReq{
  string roleId = 1;
}
message GetRolePermissionResp{
  repeated string permissionIds = 1;
}

service RoleRpc {
  rpc RoleAdd(AddRoleReq) returns (AddRoleResp);
  rpc RoleInfo(RoleInfoReq) returns (RoleInfoResp);
  rpc RoleList(ListRoleReq) returns (ListRoleResp);
  rpc RoleUpdate(UpdateRoleReq) returns (UpdateRoleResp);
  rpc RoleDelete(DeleteRoleReq) returns (DeleteRoleResp);
  rpc RoleGrantPermission(GrantRolePermissionReq) returns (GrantRolePermissionResp);
}
//Role end

//Permission start
message AddPermissionReq {
  string parentId = 1;
  string name = 2;
  string code = 3;
  string Component = 4;
  string icon = 5;
  string path = 6;
  int64 sort = 7;
  string category = 8;
}
message AddPermissionResp {
  string data = 1;
}

message PermissionInfoReq{
  string id = 1;
}
message PermissionInfoResp{
  string id = 1;
  string parentId = 2;
  string name = 3;
  string code = 4;
  string Component = 5;
  string icon = 6;
  string path = 7;
  int64 sort = 8;
  string category = 9;
  int64 status = 10;
  string createAt = 11;
  string updateAt = 12;
  string createUser = 13;
  string updateUser = 14;
  repeated PermissionInfoResp children = 16;
}

message ListPermissionReq{
  string name = 1;
  string category = 2;
  string code = 3;
}
message ListPermissionResp{
  repeated PermissionInfoResp list = 1;
}

message UpdatePermissionReq{
  string id = 1;
  string parentId = 2;
  string name = 3;
  string code = 4;
  string Component = 5;
  string icon = 6;
  string path = 7;
  int64 sort = 8;
  string category = 9;
}
message UpdatePermissionResp{
  string data = 1;
}

message DeletePermissionReq{
  repeated string ids = 1;
}
message DeletePermissionResp{
  string data = 1;
}

service PermissionRpc {
  rpc PermissionAdd(AddPermissionReq) returns (AddPermissionResp);
  rpc PermissionInfo(PermissionInfoReq) returns (PermissionInfoResp);
  rpc PermissionList(ListPermissionReq) returns (ListPermissionResp);
  rpc PermissionUpdate(UpdatePermissionReq) returns (UpdatePermissionResp);
  rpc PermissionDelete(DeletePermissionReq) returns (DeletePermissionResp);
}
//Permission end


//goctl rpc protoc sys.proto --go_out=. --go-grpc_out=. --zrpc_out=. -m --style goZero