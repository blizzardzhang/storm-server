// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package userrpc

import (
	"context"

	"storm-server/app/sys/cmd/rpc/sysClient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddClientReq            = sysClient.AddClientReq
	AddClientResp           = sysClient.AddClientResp
	AddDepartmentReq        = sysClient.AddDepartmentReq
	AddDepartmentResp       = sysClient.AddDepartmentResp
	AddPermissionReq        = sysClient.AddPermissionReq
	AddPermissionResp       = sysClient.AddPermissionResp
	AddRoleReq              = sysClient.AddRoleReq
	AddRoleResp             = sysClient.AddRoleResp
	ClientInfoReq           = sysClient.ClientInfoReq
	ClientInfoResp          = sysClient.ClientInfoResp
	DeleteClientReq         = sysClient.DeleteClientReq
	DeleteClientResp        = sysClient.DeleteClientResp
	DeleteDepartmentReq     = sysClient.DeleteDepartmentReq
	DeleteDepartmentResp    = sysClient.DeleteDepartmentResp
	DeletePermissionReq     = sysClient.DeletePermissionReq
	DeletePermissionResp    = sysClient.DeletePermissionResp
	DeleteRoleReq           = sysClient.DeleteRoleReq
	DeleteRoleResp          = sysClient.DeleteRoleResp
	DeleteUserReq           = sysClient.DeleteUserReq
	DeleteUserResp          = sysClient.DeleteUserResp
	DepartmentInfoReq       = sysClient.DepartmentInfoReq
	DepartmentInfoResp      = sysClient.DepartmentInfoResp
	GetRolePermissionReq    = sysClient.GetRolePermissionReq
	GetRolePermissionResp   = sysClient.GetRolePermissionResp
	GetUerRoleReq           = sysClient.GetUerRoleReq
	GetUerRoleResp          = sysClient.GetUerRoleResp
	GrantRolePermissionReq  = sysClient.GrantRolePermissionReq
	GrantRolePermissionResp = sysClient.GrantRolePermissionResp
	GrantRoleReq            = sysClient.GrantRoleReq
	GrantRoleResp           = sysClient.GrantRoleResp
	ListClientReq           = sysClient.ListClientReq
	ListClientResp          = sysClient.ListClientResp
	ListDepartmentReq       = sysClient.ListDepartmentReq
	ListDepartmentResp      = sysClient.ListDepartmentResp
	ListPermissionReq       = sysClient.ListPermissionReq
	ListPermissionResp      = sysClient.ListPermissionResp
	ListRoleReq             = sysClient.ListRoleReq
	ListRoleResp            = sysClient.ListRoleResp
	LoginReq                = sysClient.LoginReq
	LoginResp               = sysClient.LoginResp
	PermissionInfoReq       = sysClient.PermissionInfoReq
	PermissionInfoResp      = sysClient.PermissionInfoResp
	RoleInfoReq             = sysClient.RoleInfoReq
	RoleInfoResp            = sysClient.RoleInfoResp
	UerInfoReq              = sysClient.UerInfoReq
	UpdateClientReq         = sysClient.UpdateClientReq
	UpdateClientResp        = sysClient.UpdateClientResp
	UpdateDepartmentReq     = sysClient.UpdateDepartmentReq
	UpdateDepartmentResp    = sysClient.UpdateDepartmentResp
	UpdatePermissionReq     = sysClient.UpdatePermissionReq
	UpdatePermissionResp    = sysClient.UpdatePermissionResp
	UpdateRoleReq           = sysClient.UpdateRoleReq
	UpdateRoleResp          = sysClient.UpdateRoleResp
	UpdateUserReq           = sysClient.UpdateUserReq
	UpdateUserResp          = sysClient.UpdateUserResp
	UserInfo                = sysClient.UserInfo
	UserInfoResp            = sysClient.UserInfoResp
	UserListReq             = sysClient.UserListReq
	UserListResp            = sysClient.UserListResp

	UserRpc interface {
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
		GetUserList(ctx context.Context, in *UserListReq, opts ...grpc.CallOption) (*UserListResp, error)
		GetUserInfo(ctx context.Context, in *UerInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error)
		UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error)
		DeleteUser(ctx context.Context, in *DeleteUserReq, opts ...grpc.CallOption) (*DeleteUserResp, error)
		GrantRole(ctx context.Context, in *GrantRoleReq, opts ...grpc.CallOption) (*GrantRoleResp, error)
		GetUserRole(ctx context.Context, in *GetUerRoleReq, opts ...grpc.CallOption) (*GetUerRoleResp, error)
	}

	defaultUserRpc struct {
		cli zrpc.Client
	}
)

func NewUserRpc(cli zrpc.Client) UserRpc {
	return &defaultUserRpc{
		cli: cli,
	}
}

func (m *defaultUserRpc) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := sysClient.NewUserRpcClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUserRpc) GetUserList(ctx context.Context, in *UserListReq, opts ...grpc.CallOption) (*UserListResp, error) {
	client := sysClient.NewUserRpcClient(m.cli.Conn())
	return client.GetUserList(ctx, in, opts...)
}

func (m *defaultUserRpc) GetUserInfo(ctx context.Context, in *UerInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	client := sysClient.NewUserRpcClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUserRpc) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error) {
	client := sysClient.NewUserRpcClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}

func (m *defaultUserRpc) DeleteUser(ctx context.Context, in *DeleteUserReq, opts ...grpc.CallOption) (*DeleteUserResp, error) {
	client := sysClient.NewUserRpcClient(m.cli.Conn())
	return client.DeleteUser(ctx, in, opts...)
}

func (m *defaultUserRpc) GrantRole(ctx context.Context, in *GrantRoleReq, opts ...grpc.CallOption) (*GrantRoleResp, error) {
	client := sysClient.NewUserRpcClient(m.cli.Conn())
	return client.GrantRole(ctx, in, opts...)
}

func (m *defaultUserRpc) GetUserRole(ctx context.Context, in *GetUerRoleReq, opts ...grpc.CallOption) (*GetUerRoleResp, error) {
	client := sysClient.NewUserRpcClient(m.cli.Conn())
	return client.GetUserRole(ctx, in, opts...)
}
