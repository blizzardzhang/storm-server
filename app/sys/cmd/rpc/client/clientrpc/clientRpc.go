// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package clientrpc

import (
	"context"

	"storm-server/app/sys/cmd/rpc/sysClient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddClientReq            = sysClient.AddClientReq
	AddClientResp           = sysClient.AddClientResp
	AddDepartmentReq        = sysClient.AddDepartmentReq
	AddDepartmentResp       = sysClient.AddDepartmentResp
	AddPermissionReq        = sysClient.AddPermissionReq
	AddPermissionResp       = sysClient.AddPermissionResp
	AddRoleReq              = sysClient.AddRoleReq
	AddRoleResp             = sysClient.AddRoleResp
	ClientInfoReq           = sysClient.ClientInfoReq
	ClientInfoResp          = sysClient.ClientInfoResp
	DeleteClientReq         = sysClient.DeleteClientReq
	DeleteClientResp        = sysClient.DeleteClientResp
	DeleteDepartmentReq     = sysClient.DeleteDepartmentReq
	DeleteDepartmentResp    = sysClient.DeleteDepartmentResp
	DeletePermissionReq     = sysClient.DeletePermissionReq
	DeletePermissionResp    = sysClient.DeletePermissionResp
	DeleteRoleReq           = sysClient.DeleteRoleReq
	DeleteRoleResp          = sysClient.DeleteRoleResp
	DeleteUserReq           = sysClient.DeleteUserReq
	DeleteUserResp          = sysClient.DeleteUserResp
	DepartmentInfoReq       = sysClient.DepartmentInfoReq
	DepartmentInfoResp      = sysClient.DepartmentInfoResp
	GetRolePermissionReq    = sysClient.GetRolePermissionReq
	GetRolePermissionResp   = sysClient.GetRolePermissionResp
	GetUerRoleReq           = sysClient.GetUerRoleReq
	GetUerRoleResp          = sysClient.GetUerRoleResp
	GrantRolePermissionReq  = sysClient.GrantRolePermissionReq
	GrantRolePermissionResp = sysClient.GrantRolePermissionResp
	GrantRoleReq            = sysClient.GrantRoleReq
	GrantRoleResp           = sysClient.GrantRoleResp
	ListClientReq           = sysClient.ListClientReq
	ListClientResp          = sysClient.ListClientResp
	ListDepartmentReq       = sysClient.ListDepartmentReq
	ListDepartmentResp      = sysClient.ListDepartmentResp
	ListPermissionReq       = sysClient.ListPermissionReq
	ListPermissionResp      = sysClient.ListPermissionResp
	ListRoleReq             = sysClient.ListRoleReq
	ListRoleResp            = sysClient.ListRoleResp
	LoginReq                = sysClient.LoginReq
	LoginResp               = sysClient.LoginResp
	PermissionInfoReq       = sysClient.PermissionInfoReq
	PermissionInfoResp      = sysClient.PermissionInfoResp
	RoleInfoReq             = sysClient.RoleInfoReq
	RoleInfoResp            = sysClient.RoleInfoResp
	UerInfoReq              = sysClient.UerInfoReq
	UpdateClientReq         = sysClient.UpdateClientReq
	UpdateClientResp        = sysClient.UpdateClientResp
	UpdateDepartmentReq     = sysClient.UpdateDepartmentReq
	UpdateDepartmentResp    = sysClient.UpdateDepartmentResp
	UpdatePermissionReq     = sysClient.UpdatePermissionReq
	UpdatePermissionResp    = sysClient.UpdatePermissionResp
	UpdateRoleReq           = sysClient.UpdateRoleReq
	UpdateRoleResp          = sysClient.UpdateRoleResp
	UpdateUserReq           = sysClient.UpdateUserReq
	UpdateUserResp          = sysClient.UpdateUserResp
	UserInfo                = sysClient.UserInfo
	UserInfoResp            = sysClient.UserInfoResp
	UserListReq             = sysClient.UserListReq
	UserListResp            = sysClient.UserListResp

	ClientRpc interface {
		ClientAdd(ctx context.Context, in *AddClientReq, opts ...grpc.CallOption) (*AddClientResp, error)
		ClientInfo(ctx context.Context, in *ClientInfoReq, opts ...grpc.CallOption) (*ClientInfoResp, error)
		ClientList(ctx context.Context, in *ListClientReq, opts ...grpc.CallOption) (*ListClientResp, error)
		ClientUpdate(ctx context.Context, in *UpdateClientReq, opts ...grpc.CallOption) (*UpdateClientResp, error)
		ClientDelete(ctx context.Context, in *DeleteClientReq, opts ...grpc.CallOption) (*DeleteClientResp, error)
	}

	defaultClientRpc struct {
		cli zrpc.Client
	}
)

func NewClientRpc(cli zrpc.Client) ClientRpc {
	return &defaultClientRpc{
		cli: cli,
	}
}

func (m *defaultClientRpc) ClientAdd(ctx context.Context, in *AddClientReq, opts ...grpc.CallOption) (*AddClientResp, error) {
	client := sysClient.NewClientRpcClient(m.cli.Conn())
	return client.ClientAdd(ctx, in, opts...)
}

func (m *defaultClientRpc) ClientInfo(ctx context.Context, in *ClientInfoReq, opts ...grpc.CallOption) (*ClientInfoResp, error) {
	client := sysClient.NewClientRpcClient(m.cli.Conn())
	return client.ClientInfo(ctx, in, opts...)
}

func (m *defaultClientRpc) ClientList(ctx context.Context, in *ListClientReq, opts ...grpc.CallOption) (*ListClientResp, error) {
	client := sysClient.NewClientRpcClient(m.cli.Conn())
	return client.ClientList(ctx, in, opts...)
}

func (m *defaultClientRpc) ClientUpdate(ctx context.Context, in *UpdateClientReq, opts ...grpc.CallOption) (*UpdateClientResp, error) {
	client := sysClient.NewClientRpcClient(m.cli.Conn())
	return client.ClientUpdate(ctx, in, opts...)
}

func (m *defaultClientRpc) ClientDelete(ctx context.Context, in *DeleteClientReq, opts ...grpc.CallOption) (*DeleteClientResp, error) {
	client := sysClient.NewClientRpcClient(m.cli.Conn())
	return client.ClientDelete(ctx, in, opts...)
}
