// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	sysapp "storm-server/app/sys/cmd/api/internal/handler/sys/app"
	sysdepartment "storm-server/app/sys/cmd/api/internal/handler/sys/department"
	syspermission "storm-server/app/sys/cmd/api/internal/handler/sys/permission"
	sysrole "storm-server/app/sys/cmd/api/internal/handler/sys/role"
	sysuser "storm-server/app/sys/cmd/api/internal/handler/sys/user"
	"storm-server/app/sys/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckUrl},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: sysapp.DeleteAppHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/info",
					Handler: sysapp.AppDetailHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/list",
					Handler: sysapp.ListAppHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/save",
					Handler: sysapp.SaveAppHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: sysapp.UpdateAppHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/sys/app"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckUrl},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: sysdepartment.DeleteDepartmentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/detail",
					Handler: sysdepartment.DepartmentInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/list",
					Handler: sysdepartment.ListDepartmentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/save",
					Handler: sysdepartment.AddDepartmentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: sysdepartment.UpdateDepartmentHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/sys/department"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckUrl},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: syspermission.DeletePermissionHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/detail",
					Handler: syspermission.PermissionDetailHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/list",
					Handler: syspermission.ListPermissionHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/route",
					Handler: syspermission.RouteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/save",
					Handler: syspermission.SavePermissionHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: syspermission.UpdatePermissionHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/sys/permission"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckUrl},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: sysrole.DeleteRoleHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/detail",
					Handler: sysrole.GetRoleHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/list",
					Handler: sysrole.ListRoleHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/save",
					Handler: sysrole.SaveRoleHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: sysrole.UpdateRoleHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/sys/role"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: sysuser.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/wxLogin",
				Handler: sysuser.WXMiniAuthHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/sys/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckUrl},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: sysuser.DeleteUserHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/info",
					Handler: sysuser.UserInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/page",
					Handler: sysuser.UserPageHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: sysuser.UpdateUserHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/sys/user"),
	)
}
